<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="node48" tests="9" failures="0" timestamp="16 Sep 2016 13:39:37 GMT" time="0.062" errors="0">
  <testcase name="@BeforeMethod initializeSet" time="0.0" classname="TestSimpleSet_Empty_addA_A">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
	at ArraySet.contains(ArraySet.java:48)
	at ArraySet.add(ArraySet.java:59)
	at TestSimpleSet_Empty_addA_A.initializeSet(TestSimpleSet_Empty_addA_A.java:26)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:216)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:590)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1129)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:746)
	at org.testng.TestRunner.run(TestRunner.java:600)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1264)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1189)
	at org.testng.TestNG.runSuites(TestNG.java:1104)
	at org.testng.TestNG.run(TestNG.java:1076)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initializeSet -->
  <testcase name="@BeforeMethod initializeSet" time="0.0" classname="TestSimpleSet_Empty_addA_A">
    <skipped/>
  </testcase> <!-- @BeforeMethod initializeSet -->
  <testcase name="@BeforeMethod initializeSet" time="0.0" classname="TestSimpleSet_Empty_addA_A">
    <skipped/>
  </testcase> <!-- @BeforeMethod initializeSet -->
  <testcase name="@BeforeMethod initializeSet" time="0.0" classname="TestSimpleSet_Empty_addA_A">
    <skipped/>
  </testcase> <!-- @BeforeMethod initializeSet -->
  <testcase name="@BeforeMethod initializeSet" time="0.0" classname="TestSimpleSet_Empty_addA_A">
    <skipped/>
  </testcase> <!-- @BeforeMethod initializeSet -->
  <testcase name="@BeforeMethod initializeSet" time="0.0" classname="TestSimpleSet_Empty_addA_A">
    <skipped/>
  </testcase> <!-- @BeforeMethod initializeSet -->
  <testcase name="@BeforeMethod initializeSet" time="0.0" classname="TestSimpleSet_Empty_addA_A">
    <skipped/>
  </testcase> <!-- @BeforeMethod initializeSet -->
  <testcase name="@BeforeMethod initializeSet" time="0.0" classname="TestSimpleSet_Empty_addA_A">
    <skipped/>
  </testcase> <!-- @BeforeMethod initializeSet -->
  <testcase name="@BeforeMethod initializeSet" time="0.0" classname="TestSimpleSet_Empty_addA_A">
    <skipped/>
  </testcase> <!-- @BeforeMethod initializeSet -->
  <testcase name="testAdd_A" time="0.002" classname="TestSimpleSet_Empty_addA_A">
    <skipped/>
  </testcase> <!-- testAdd_A -->
  <testcase name="testAdd_B" time="0.001" classname="TestSimpleSet_Empty_addA_A">
    <skipped/>
  </testcase> <!-- testAdd_B -->
  <testcase name="testContains_A" time="0.001" classname="TestSimpleSet_Empty_addA_A">
    <skipped/>
  </testcase> <!-- testContains_A -->
  <testcase name="testContains_B" time="0.001" classname="TestSimpleSet_Empty_addA_A">
    <skipped/>
  </testcase> <!-- testContains_B -->
  <testcase name="testIsEmpty" time="0.001" classname="TestSimpleSet_Empty_addA_A">
    <skipped/>
  </testcase> <!-- testIsEmpty -->
  <testcase name="testRemove_A" time="0.001" classname="TestSimpleSet_Empty_addA_A">
    <skipped/>
  </testcase> <!-- testRemove_A -->
  <testcase name="testRemove_B" time="0.001" classname="TestSimpleSet_Empty_addA_A">
    <skipped/>
  </testcase> <!-- testRemove_B -->
  <testcase name="testSize" time="0.001" classname="TestSimpleSet_Empty_addA_A">
    <skipped/>
  </testcase> <!-- testSize -->
  <testcase name="testToString" time="0.001" classname="TestSimpleSet_Empty_addA_A">
    <skipped/>
  </testcase> <!-- testToString -->
</testsuite>
