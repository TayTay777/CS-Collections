/** * LinearNode represents a node in a linked list. * * @author Java Foundations * @version 4.0 */public class LinearNode<E>{    private LinearNode<E> nextnode;    private LinearNode<E> previousnode;    private E element;        /**     * Creates an empty node.     */    public LinearNode()    {    	previousnode = null;        nextnode = null;        element = null;    }        /**     * Creates a node storing the specified element.     *     * @param elem the element to be stored within the new node     */    public LinearNode(E elem)    {        nextnode = null;        previousnode = null;        element = elem;    }        /**     * Returns the node that follows this one.     *     * @return the node that follows the current one     */    public LinearNode<E> getNext()    {        return nextnode;    }        public LinearNode<E> getPrevious()    {        return previousnode;    }        /**     * Sets the node that follows this one.     *     * @param node the node to be set to follow the current one     */    public void setNext(LinearNode<E> node)    {        nextnode = node;    }        /**     * Returns the element stored in this node.     *     * @return the element stored in this node     */        public void setPrevious(LinearNode<E> node)    {        previousnode = node;    }            public E getElement()    {        return element;    }        /**     * Sets the element stored in this node.     *     * @param elem the element to be stored in this node     */    public void setElement(E elem)    {        element = elem;    }}