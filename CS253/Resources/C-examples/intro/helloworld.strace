//execve stands for execute program
execve("./helloworld", ["helloworld"], [/* 75 vars */]) = 0
//brk stands for changing the location of the program break
brk(0)                                  = 0x13eb000
//mmap stands for function shall establish a mapping between a process' address space and a file, shared memory object, or typed memory object
//instructor def: 
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f91b208d000
//access checks to see if a location(s) is accessable
access("/etc/ld.so.preload", R_OK)      = -1 ENOENT (No such file or directory)
//open opens a file location, checks header location
//
open("/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3
//fstat gets file status
fstat(3, {st_mode=S_IFREG|0644, st_size=121689, ...}) = 0
mmap(NULL, 121689, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f91b206f000
close(3)                                = 0
open("/lib64/libc.so.6", O_RDONLY|O_CLOEXEC) = 3
//
read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0@\34\2\0\0\0\0\0"..., 832) = 832
fstat(3, {st_mode=S_IFREG|0755, st_size=2118128, ...}) = 0
mmap(NULL, 3932672, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f91b1aad000
//
mprotect(0x7f91b1c64000, 2093056, PROT_NONE) = 0
mmap(0x7f91b1e63000, 24576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1b6000) = 0x7f91b1e63000
mmap(0x7f91b1e69000, 16896, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f91b1e69000
close(3)                                = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f91b206e000
mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f91b206c000
arch_prctl(ARCH_SET_FS, 0x7f91b206c740) = 0
mprotect(0x7f91b1e63000, 16384, PROT_READ) = 0
mprotect(0x600000, 4096, PROT_READ)     = 0
mprotect(0x7f91b208e000, 4096, PROT_READ) = 0
munmap(0x7f91b206f000, 121689)          = 0
fstat(1, {st_mode=S_IFCHR|0600, st_rdev=makedev(136, 1), ...}) = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f91b208c000
//counts number of bits and shows where the information is sent out to 
write(1, "Hello World!\n", 13)          = 13
exit_group(0)                           = ?
+++ exited with 0 +++
